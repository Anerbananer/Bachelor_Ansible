---
- hosts: firewall
  gather_facts: no
  become: yes
  vars:
    nat_to_zone: "DMZ"
    nat_to_port: "80"
    nat_from_port: "80"
    nat_to_ip: "10.0.1.10"

  tasks:
  - name: stop firewalld
    service:
      name: firewalld
      state: stopped
      enabled: no

  - name: iptables flush filter
    iptables:
      chain: "{{ item }}"
      flush: yes
    with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]

  - name: iptables flush nat
    iptables:
      table: nat
      chain: '{{ item }}'
      flush: yes
    with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]

  - name: Enable masquerade
    iptables:
      table: nat
      chain: POSTROUTING
      out_interface: enp0s3
      jump: MASQUERADE

  - name: Enable Incomming Connection Tracking
    iptables:
      chain: INPUT
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT

  - name: Enable Outgoing Connection Tracking
    iptables:
      chain: OUTPUT
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT
  
  - name: Enable Outgoing Connection Tracking
    iptables:
      chain: FORWARD
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT

  - name: Allow DNS traffic to firewall (UDP)
    iptables:
      chain: FORWARD
      protocol: udp
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      destination_port: "{{item}}"
      jump: ACCEPT
      in_interface: enp0s3
    with_items:
    - "53"

  - name: Allow DNS, HTTP, HTTPS traffic to firewall (TCP)
    iptables:
      chain: FORWARD
      protocol: tcp
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      destination_port: "{{item}}"
      jump: ACCEPT
      in_interface: enp0s3
    with_items:
    - "53"
    - "80"
    - "8080"
    - "443"

  - name: Allow loopback
    iptables:
      chain: INPUT
      jump: ACCEPT
      source: "127.0.0.1"

  - name: Allow WAN Interface
    iptables:
      chain: OUTPUT
      jump: ACCEPT
      out_interface: enp0s3
 
  - name: Allow External to LAN interface if Established and Related
    iptables:
      chain: FORWARD
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT
      in_interface: enp0s3
      out_interface: enp0s8 

  - name: Allow External to DMZ interface if Established and Related
    iptables:
      chain: FORWARD
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT
      in_interface: enp0s3
      out_interface: enp0s9

  - name: Allow LAN to DMZ interface
    iptables:
      chain: FORWARD
      jump: ACCEPT
#      protocol: tcp
#      destination_port: "22"
      in_interface: enp0s8
      out_interface: enp0s9

  - name: Allow DMZ to LAN interface if Established and Related
    iptables:
      chain: FORWARD
      ctstate: [ 'ESTABLISHED', 'RELATED']
      match: conntrack
      jump: ACCEPT
#      protocol: tcp
#      destination_port: "22"
      in_interface: enp0s9
      out_interface: enp0s8
  
  - name: Allow traffic from LAN to firewall
    iptables:
      chain: INPUT
      protocol: tcp
#      destination_port: "22"
      jump: ACCEPT
      source: 10.0.0.0/24
      destination: 10.0.0.1/32

  - name: Allow traffic from firewall to nodes
    iptables:
      chain: OUTPUT
      protocol: tcp
      destination_port: "22"
      jump: ACCEPT
      source: "{{ item }}"
    with_items:
    - "10.0.0.1/32"
    - "10.0.1.1/32"
    - "127.0.0.1/32"

  - name: Allow traffic from windows host to firewall
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: "22"
      jump: ACCEPT
      in_interface: enp0s3      

  - name: Allow Internet and DNS traffic from LAN to External (TCP)
    iptables:
      chain: FORWARD
      protocol: tcp
      destination_port: "{{item}}"
      jump: ACCEPT
      in_interface: enp0s8
      out_interface: enp0s3
    with_items:
    - "80"
    - "8080"
    - "443"
    - "53"

  - name: Allow Internet and DNS traffic from LAN to External (UDP)
    iptables:
      chain: FORWARD
      protocol: udp
      destination_port: "{{item}}"
      jump: ACCEPT
      in_interface: enp0s8
      out_interface: enp0s3
    with_items:
    - "53"

  - name: Allow Internet traffic from DMZ to External (TCP)
    iptables:
      chain: FORWARD
      protocol: tcp
      destination_port: "{{item}}"
      jump: ACCEPT
      destination: mirror.fysik.dtu.dk
      in_interface: enp0s9
      out_interface: enp0s3
    with_items:
    - "80"
    - "8080"
    - "443"
    

  - name: Allow Internet and DNS traffic from LAN to External (UDP)
    iptables:
      chain: FORWARD
      protocol: udp
      destination_port: "{{item}}"
      jump: ACCEPT
      in_interface: enp0s9
      out_interface: enp0s3
    with_items:
    - "53"

  - name: Access to AWX Web Interface
    include: nat_fw_include.yml

  - name: Deny all traffic from External
    iptables:
      chain: INPUT
      jump: DROP
      in_interface: "{{ item }}"
    with_items:
    - enp0s3

  - name: Log all Outgoing drops
    iptables:
      chain: INPUT
      jump: LOG
      action: append
      state: present
      limit: 2/second
      limit_burst: "20"
      log_prefix: "FIREWALL INPUT LAN/DMZ DROP: "
      log_level: info

  
  - name: Deny all traffic from LAN and DMZ
    iptables:
      chain: INPUT
      jump: REJECT
      in_interface: "{{ item }}"
    with_items:
    - enp0s8
    - enp0s9


  - name: Log all Outgoing drops
    iptables:
      chain: OUTPUT
      jump: LOG
      action: append
      state: present
      limit: 2/second
      limit_burst: "20"
      log_prefix: "FIREWALL OUTPUT DROP: "
      log_level: info

  - name: Deny all Outgoing traffic
    iptables:
      chain: OUTPUT
      jump: REJECT
  
  - name: Log all Outgoing drops
    iptables:
      chain: FORWARD
      jump: LOG
      action: append
      state: present
      limit: 2/second
      limit_burst: "20"
      log_prefix: "FIREWALL FORWARD DROP: "
      log_level: info

  - name: Deny all Forwarded traffic
    iptables:
      chain: FORWARD
      jump: REJECT

  - name: Install iptables-services
    yum:
      name: iptables-services
      state: latest

  - name: Enable iptables
    service:
      name: iptables
      state: started
      enabled: yes

  - name: Save fw rules
    command: service iptables save

  - name: Enable ipv4 forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: "1"
      sysctl_set: yes
      state: present
      reload: yes
